AWSTemplateFormatVersion: 2010-09-09
Description: >
  Launches AWS Fargate resources and then spins or updates containers in them.
  Networking resources have been referenced from an already-created stack (in the same region) with help of 'ImportValue'.
Parameters:
  Environment:
    Type: String
    AllowedValues:
      - "development"
      - "staging"
      - "production"
  ProjectName:
    Type: String
    Description: Provide ProjectName which should be same as Name in VPC.
  EnvironmentFile:
    Type: String
    Description: S3 ARN of environment file for this environment.
  ApiImageUri:
    Type: String
    Description: Provide ECR URI of the Api. Please append the image's tag at the end of this URL.
  HostedZoneId:
    Type: String
    Description: Provide Hosted Zone ID for Domain.
  DomainName:
    Type: String
    Description: Provide Domain for certificates.

Conditions:
  IsDevelopment: !Equals [!Ref Environment, "development"]
  IsStaging: !Equals [!Ref Environment, "staging"]
  IsProduction: !Equals [!Ref Environment, "production"]
Resources:
################[ LogGroup and Secret Section ]######################################
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
  Secret:
    Type: AWS::SecretsManager::Secret
    Properties: {}
################[ Target Groups Section ]######################################
  ApiTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: "ip"
      Protocol: "HTTP"
      Port: 80
      VpcId:
        Fn::ImportValue: !Join ["-", [!Ref ProjectName, VPC]]
      HealthCheckProtocol: "HTTP"
      HealthCheckPath: "/health"
      HealthCheckPort: "traffic-port"
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 10
      HealthCheckIntervalSeconds: 15
      Matcher:
        HttpCode: 200,301,404

################[ Listener Rule Section ]######################################
  ListenerRuleApi:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Priority: 2
      ListenerArn:
        Fn::ImportValue: 
          !Join ['-', [!Ref ProjectName, !Ref Environment, HttpsListenerARN]]
      Conditions:
        - Field: "host-header"
          Values:
            - !If [IsDevelopment, !Join [".", [api, d, !Ref DomainName]], !If [ IsStaging, !Join [".", [api, s, !Ref DomainName]], !If [IsProduction, !Join [".", [api, !Ref DomainName]],!Ref "AWS::NoValue",],],]
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ApiTG
          Order: 1

################[ Route53 DNS Section ]######################################
  DnsRecordApi:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !If [IsDevelopment, !Join [".", [api, d, !Ref DomainName]], !If [ IsStaging, !Join [".", [api, s, !Ref DomainName]], !If [IsProduction, !Join [".", [api, !Ref DomainName]],!Ref "AWS::NoValue",],],]
      Type: CNAME
      ResourceRecords:
        - Fn::ImportValue: !Join ['-', [!Ref ProjectName, !Ref Environment, alb, DNSName]] # DNS of load balancer
      TTL: 300
  
################[ API Service & Task Definition Section ]######################
  ApiService:
    Type: AWS::ECS::Service
    Properties:
      LaunchType: "FARGATE"
      TaskDefinition: !Ref TaskDefinitionApi
      PlatformVersion: "LATEST"
      Cluster: 
        Fn::ImportValue: 
          !Join ['-', [!Ref ProjectName, !Ref Environment, Cluster]]
      SchedulingStrategy: "REPLICA"
      DesiredCount: !If [IsProduction, 2, 1]
      DeploymentConfiguration: # value of interest, to look for, while updating the service
        MaximumPercent: !If [IsProduction, 150, 100]
        MinimumHealthyPercent: !If [IsProduction, 50, 0]
      DeploymentController:
        Type: "ECS"
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Fn::ImportValue: !Join ["-", [!Ref ProjectName, PrivateSubnetA]]
            - Fn::ImportValue: !Join ["-", [!Ref ProjectName, PrivateSubnetB]]
          SecurityGroups: 
            - !If [IsDevelopment, Fn::ImportValue: !Join ["-", [!Ref ProjectName, dev, SG]], !If [ IsStaging, Fn::ImportValue: !Join ["-", [!Ref ProjectName, stag, SG]], !If [IsProduction, Fn::ImportValue: !Join ["-", [!Ref ProjectName, prod, SG]],!Ref "AWS::NoValue",],],]
          AssignPublicIp: "ENABLED"
      HealthCheckGracePeriodSeconds: '5'
      LoadBalancers:
        - TargetGroupArn: !Ref ApiTG
          ContainerName: "ApiContainer"
          ContainerPort: '80' 
    DependsOn:
      # - HttpListener
      # - HttpsListener
      - TaskDefinitionApi
      - ListenerRuleApi

  TaskDefinitionApi:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      NetworkMode: "awsvpc"
      ExecutionRoleArn: 
        Fn::ImportValue: 
          !Join ['-', [!Ref ProjectName, ECSTaskExecutionRole]]
      Memory: 512 # 0.5 GB
      Cpu: 256 # 0.25 vCPU
      ContainerDefinitions:
        - Name: "ApiContainer"
          Image: !Ref ApiImageUri
          EnvironmentFiles:
            - value: !Join ["", ["arn:aws:s3:::", !Join ["-", [!Ref ProjectName, environment-variables-fargate]], "/", !Ref EnvironmentFile]]
              type: s3
          PortMappings: # forward traffic to (and receive traffice from) container on these ports
            - Protocol: "tcp"
              ContainerPort: 80
              HostPort: 80
            - Protocol: "tcp"
              ContainerPort: 22
              HostPort: 22
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region # get the current region
              awslogs-stream-prefix: !Join ["-", [!Ref ProjectName,!Ref Environment, "ecs_"]]
  
Outputs:
  WebApiDNSUrl:
    Description: "URL for Server"
    Value: !If [IsDevelopment, !Join [".", [api, d, !Ref DomainName]], !If [ IsStaging, !Join [".", [api, s, !Ref DomainName]], !If [IsProduction, !Join [".", [api, !Ref DomainName]],!Ref "AWS::NoValue",],],]